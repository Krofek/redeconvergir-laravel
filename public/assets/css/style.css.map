{"version":3,"sources":["style.scss","../../../bower_components/bourbon/app/assets/stylesheets/addons/_size.scss","../../../bower_components/neat/app/assets/stylesheets/grid/_box-sizing.scss"],"names":[],"mappings":"AASA;;EC+BI,aD7BgB;ECmChB,YDnCgB,EACnB;;AETC;EACE,uBAAuB,EACxB;;AAED;EAII,oBAAoB,EACrB","file":"style.css","sourcesContent":["@import '../../../bower_components/bourbon/app/assets/stylesheets/_bourbon.scss';\n\n// We put our faith in gulp's autoprefixer\n$prefix-for-webkit:    true;\n$prefix-for-mozilla:   true;\n$prefix-for-microsoft: true;\n$prefix-for-opera:     true;\n$prefix-for-spec:      true;\n\nhtml,\nbody {\n  @include size(100%);\n}\n\n@import '../../../bower_components/neat/app/assets/stylesheets/_neat.scss';","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n"],"sourceRoot":"/source/"}